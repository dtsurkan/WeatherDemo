//
//  MainModels.swift
//  WeatherDemo
//
//  Created by Dima Tsurkan on 9/21/17.
//  Copyright (c) 2017 Dima Tsurkan. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import IGListKit

enum Main {
    
    // MARK: - Use cases
  
    enum CurrentWeaher {
        struct Request {
            let latitude: Double
            let longitude: Double
        }
        
        struct Response {
            var weather: WeatherModel?
            var errorDescription: String?
        }
    
        struct ViewModel {
            class DisplayedWeather: ListDiffable {
                var id: Int
                var weather: WeatherModel
                
                // MARK: - Init
                
                init(id: Int, weather: WeatherModel) {
                    self.id = id
                    self.weather = weather
                }
                
                // MARK: - ListDiffable
                
                func diffIdentifier() -> NSObjectProtocol {
                    return id as NSObjectProtocol
                }
                
                func isEqual(toDiffableObject object: ListDiffable?) -> Bool {
                    guard self !== object else { return true }
                    return false
                }
            }
            var displayedWeather: DisplayedWeather
        }
    }
    
    enum Forecast {
        struct Request {
            let latitude: Double
            let longitude: Double
        }
        
        struct Response {
            var forecast: ForecastModel?
            var errorDescription: String?
        }
        
        struct ViewModel {
            class DisplayedForecast: ListDiffable {
                var id: Int
                var forecast: ForecastModel
                
                // MARK: - Init
                
                init(id: Int, forecast: ForecastModel) {
                    self.id = id
                    self.forecast = forecast
                }
                
                // MARK: - ListDiffable
                
                func diffIdentifier() -> NSObjectProtocol {
                    return id as NSObjectProtocol
                }
                
                func isEqual(toDiffableObject object: ListDiffable?) -> Bool {
                    guard self !== object else { return true }
                    return false
                }
            }
            var displayedForecast: [DisplayedForecast]
        }
    }
}
